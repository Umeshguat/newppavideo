<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Vikas Sharma Scrum Meeting Call</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

  <style>
    .meet-container {
      max-width: 1100px;
      margin: auto;
      padding: 20px;
    }

    .video-box {
      background: #222;
      color: white;
      border-radius: 10px;
      position: relative;
      height: 400px;
      display: flex;
      align-items: center;
      justify-content: center;
      flex-direction: column;
      width: 100%;
      overflow: hidden;
    }

    .video-box video {
      display: none;
      width: 100%;
      height: 100%;
      object-fit: cover;
      border-radius: 10px;
    }

    .video-box .controls {
      position: absolute;
      bottom: 10px;
      left: 50%;
      transform: translateX(-50%);
    }

    .controls button {
      border: none;
      background: red;
      color: white;
      padding: 10px 15px;
      margin: 5px;
      border-radius: 50%;
    }

    .action-buttons {
      text-align: center;
    }

    .btn-switch {
      background-color: #007bff;
      color: white;
      padding: 6px 25px;
      border-radius: 50px;
      text-decoration: none;
      border: none;
    }

    .row {
      display: flex;
      align-items: center;
      margin-top: 100px;
    }

    .joinRoom {
      margin-right: auto;
      margin-left: auto;
      width: max-content;
      margin-bottom: 30px;
    }

    .joinRoom label {
      width: 75px;

    }

    .roomIdInput {
      border: 1px solid rgba(0, 0, 0, 0.2);
      border-radius: 8px;
      height: 40px;
      box-shadow: 0 1px 2px rgba(0, 0, 0, 0.2);
      padding-left: 10px;

    }
  </style>
</head>

<body>  

  <div class="container meet-container">
    <div class="row topD">
      <!-- Left side: Video Box -->
      <div class="col-md-7">
        <div class="video-box">
          <h5 id="username-display">Vikas Sharma</h5>
          <p id="camera-status">Camera is off</p>
          <video id="videoElement" autoplay></video>
          <div class="controls">
            <button id="toggle-mic" class="btn btn-danger"><i id="mic-icon"
                class="fa-solid fa-microphone-slash"></i></button>
            <button id="toggle-camera" class="btn btn-danger"><i id="camera-icon"
                class="fa-solid fa-video-slash"></i></button>
          </div>
        </div>
      </div>

      <!-- Right side: Meeting details -->
      <div class="col-md-5">
        <div class="text-center">
          <h3>Vikas Sharma Scrum Meeting Call</h3>
          <p>Vikas Sharma, Mukesh Kumar, Rudhir Ingale and 2 more are in this call</p>
        </div>
        <form action="/room">
          <!-- <form action="/gmeet"> -->
          <div class="joinRoom">
            <div class="mb-2">
              <label for="room-id">Room Id</label>
              <input type="text" id="room-id" name="room" value="123456789" class="roomIdInput">
            </div>
            <div>
              <label for="username">Name</label>
              <input type="text" id="username" value="vikas" name="username" class="roomIdInput">
            </div>
          </div>

          <div class="action-buttons">
            <button type="submit" class="btn-switch">Join</button>
          </div>
      </div>
    </div>
    </form>
  </div>

  <script>
    let isCameraOn = false;
    let isMicOn = false;
    let stream = null;
    const videoElement = document.getElementById("videoElement");
    const cameraStatus = document.getElementById("camera-status");
    const cameraName = document.getElementById("username-display");

    document.getElementById("toggle-camera").addEventListener("click", async () => {
      if (!isCameraOn) {
        try {
          stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });

          console.log(stream);
          videoElement.srcObject = stream;
          videoElement.style.display = "block"; // Show the video
          cameraStatus.style.display = "none"; // Hide text
          cameraName.style.display = "none"; // Hide text
          document.getElementById("camera-icon").classList.remove("fa-video-slash");
          document.getElementById("camera-icon").classList.add("fa-video");
          isCameraOn = true;
        } catch (err) {
          alert("Camera access denied!");
        }
      } else {
        if (stream) {
          ///stream.getTracks().forEach(track => track.stop());
          stream.getTracks().forEach(track => {
            if (track.kind === 'video') {
              track.stop(); // Stop only video tracks
            }
          });
        }
        videoElement.style.display = "none"; // Hide the video
        cameraStatus.style.display = "block"; // Show text
        cameraName.style.display = "block"; // Hide text
        document.getElementById("camera-icon").classList.remove("fa-video");
        document.getElementById("camera-icon").classList.add("fa-video-slash");
        isCameraOn = false;
      }
    });

    document.getElementById("toggle-mic").addEventListener("click", async () => {
      if (!isMicOn) {
        try {
          stream = await navigator.mediaDevices.getUserMedia({ audio: true });
          document.getElementById("mic-icon").classList.remove("fa-microphone-slash");
          document.getElementById("mic-icon").classList.add("fa-microphone");
          isMicOn = true;
        } catch (err) {
          alert("Microphone access denied!");
        }
      } else {
        if (stream) {
          stream.getTracks().forEach(track => track.stop());
        }
        document.getElementById("mic-icon").classList.remove("fa-microphone");
        document.getElementById("mic-icon").classList.add("fa-microphone-slash");
        isMicOn = false;
      }
    });
  </script>


</body>

</html>